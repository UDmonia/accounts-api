name: Account Service CI for Development

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Run local MongoDB for test
        run: sudo systemctl start mongod.service

      - uses: actions/checkout@v2

      - name: Setup NodeJs
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Package install
        run: yarn install --force --production=false

      #- name: Run unit tests
      #  run: yarn jest --ci --collect-coverage
      #  env:
      #    DB_URL: mongodb://localhost:27017/test
      #    DB_OPTIONS: minSize=5&poolSize=20
      #    SECRET: secret

      - name: App build
        run: yarn build
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1
        env:
          AWS_REGION: us-west-1

      - name: ECR Login
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Docker build and push
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          ECR_REPOSITORY: accounts-api
          IMAGE_TAG: 'latest'
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Retrieve service task definition
        run: aws ecs describe-task-definition --task-definition accounts-api --query taskDefinition > task-definition.json

      - name: Render Amazon ECS task definition
        id: render-accounts-api
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: accounts-api-latest
          image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: task-definition.json
          service: accounts-api
          cluster: dev
          wait-for-service-stability: true